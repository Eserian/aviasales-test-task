{"version":3,"sources":["components/Header/logo.svg","components/Header/Header.tsx","components/Checkbox/Checkbox.tsx","components/Filter/Filter.tsx","components/Sorting/Sorting.tsx","components/FlightCard/FlightCard.tsx","components/Preloader/Preloader.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","src","logo","alt","Checkbox","stopType","isChecked","label","onChange","type","checked","data-type","Filter","handleFilter","useState","all","filterParam","stops","setStops","handleStopsChange","useCallback","e","target","dataset","Object","entries","reduce","acc","key","value","newStops","isAllFieldsChecked","filter","every","keys","map","sort","a","b","i","Sorting","handleSort","sortType","setSortType","leftTabClass","cn","active","rightTabClass","handleClick","sortName","sortname","onClick","data-sortname","FlightCard","data","price","carrier","segments","url","origin","destination","date","duration","format","Date","addMinutes","mins","hours","Math","trunc","minutes","getTimeFromMins","plural","length","join","Preloader","sortingMap","cheap","fast","API_URL","getSearchId","axios","get","response","searchId","getTicketPack","App","allTickets","setAllTickets","isLoading","setIsLoading","setSort","filterParams","setFilterParams","useEffect","iter","ticketPack","newAcc","tickets","stop","loadTickets","ticket","flightForceStops","flightBackStops","includes","slice","Ticket","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a442258c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.96990a1b.svg\";","import React, { FunctionComponent } from 'react';\nimport logo from './logo.svg';\nimport './header.css';\n\nexport const Header: FunctionComponent = () => (\n  <header className=\"header\">\n    <img src={logo} alt=\"logo\" />\n  </header>\n);\n","import React, { FC } from 'react';\nimport './checkbox.css';\n\ntype CheckboxProps = {\n  stopType: string;\n  label: string;\n  isChecked: boolean;\n  onChange: (e: React.SyntheticEvent<HTMLInputElement>) => void;\n};\n\nexport const Checkbox: FC<CheckboxProps> = ({\n  stopType,\n  isChecked,\n  label,\n  onChange,\n}) => (\n  <div className=\"checkbox\">\n    <label className=\"checkbox-label\">\n      <input\n        type=\"checkbox\"\n        className=\"checkbox-input\"\n        checked={isChecked}\n        onChange={onChange}\n        data-type={stopType}\n      />\n      <span className=\"checkbox-display\" />\n      {label}\n    </label>\n  </div>\n);\n","import React, { FC, useState, useCallback } from 'react';\nimport './filter.css';\nimport { Checkbox } from '../Checkbox/Checkbox';\n\ntype Stops = {\n  [key: string]: { label: string; checked: boolean; filterParam: number };\n};\n\ntype FilterProps = {\n  handleFilter: (filterParams: number[]) => void;\n};\n\nexport const Filter: FC<FilterProps> = ({ handleFilter }) => {\n  const initStops: Stops = {\n    all: { label: 'Все', checked: true, filterParam: -1 },\n    'without stops': { label: 'Без пересадок', checked: true, filterParam: 0 },\n    'one stop': { label: '1 пересадка', checked: true, filterParam: 1 },\n    'two stops': { label: '2 пересадки', checked: true, filterParam: 2 },\n    'three stops': { label: '3 пересадки', checked: true, filterParam: 3 },\n  };\n\n  const [stops, setStops] = useState(initStops);\n\n  const handleStopsChange = useCallback(\n    (e: React.SyntheticEvent<HTMLInputElement>) => {\n      const stopType = (e.target as HTMLInputElement).dataset.type;\n      const isChecked = (e.target as HTMLInputElement).checked;\n\n      if (stopType === 'all') {\n        setStops(\n          Object.entries(stops).reduce(\n            (acc, [key, value]) => ({\n              ...acc,\n              [key]: { ...value, checked: isChecked },\n            }),\n            {}\n          )\n        );\n        handleFilter(isChecked ? [0, 1, 2, 3] : []);\n        return;\n      }\n\n      const newStops = {\n        ...stops,\n        [stopType as string]: {\n          ...stops[stopType as string],\n          checked: isChecked,\n        },\n      };\n      const isAllFieldsChecked: boolean = Object.entries(newStops)\n        .filter(([key]) => key !== 'all')\n        .every(([, { checked }]) => checked);\n      newStops.all = { ...newStops.all, checked: isAllFieldsChecked };\n      setStops(newStops);\n      handleFilter(\n        Object.keys(newStops)\n          .filter((key) => newStops[key].checked)\n          .map((key) => newStops[key].filterParam)\n      );\n    },\n    [handleFilter, stops]\n  );\n\n  return (\n    <aside className=\"filter\">\n      <div className=\"filter-header\">Количество пересадок</div>\n      <div className=\"checkbox-list\">\n        {Object.entries(stops)\n          .sort(([, a], [, b]) => a.filterParam - b.filterParam)\n          .map(([key, { label, checked }], i) => (\n            <Checkbox\n              key={i}\n              label={label}\n              stopType={key}\n              isChecked={checked}\n              onChange={handleStopsChange}\n            />\n          ))}\n      </div>\n    </aside>\n  );\n};\n","import cn from 'classnames';\nimport React, { FC, useState, useCallback } from 'react';\nimport './sorting.css';\n\ntype SortingProps = {\n  handleSort: (sortType: string) => void;\n};\n\nexport const Sorting: FC<SortingProps> = ({ handleSort }) => {\n  const [sortType, setSortType] = useState('cheap');\n\n  const leftTabClass = cn('tab', 'left-tab', {\n    active: sortType === 'cheap',\n  });\n\n  const rightTabClass = cn('tab', 'right-tab', {\n    active: sortType === 'fast',\n  });\n\n  const handleClick = useCallback(\n    (e: React.SyntheticEvent<HTMLDivElement>) => {\n      const sortName = (e.target as HTMLDivElement).dataset.sortname;\n      setSortType(sortName as string);\n      handleSort(sortName as string);\n    },\n    [handleSort]\n  );\n\n  return (\n    <div className=\"tabs\">\n      <div className={leftTabClass} onClick={handleClick} data-sortname=\"cheap\">\n        Самый дешевый\n      </div>\n      <div className={rightTabClass} onClick={handleClick} data-sortname=\"fast\">\n        Самый быстрый\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable react/no-array-index-key */\nimport React, { FC } from 'react';\nimport plural from 'plural-ru';\nimport { format, addMinutes } from 'date-fns';\nimport { Ticket } from '../App';\nimport './ticket.css';\n\ntype FlightCardProps = {\n  data: Ticket;\n};\n\nconst getTimeFromMins = (mins: number) => {\n  const hours = Math.trunc(mins / 60);\n  const minutes = mins % 60;\n  return `${hours}ч ${minutes}м`;\n};\n\nexport const FlightCard: FC<FlightCardProps> = ({ data }) => {\n  const { price, carrier, segments } = data;\n  const url = `//pics.avs.io/99/36/${carrier}.png`;\n\n  return (\n    <div className=\"ticket\">\n      <header className=\"ticket-header\">\n        <div className=\"ticket-price\">{`${price} Р`}</div>\n        <div className=\"ticket-logo\">\n          <img src={url} alt=\"logo\" />\n        </div>\n      </header>\n      <div className=\"flight-data\">\n        {segments.map(({ origin, destination, date, stops, duration }, i) => (\n          <div key={i} className=\"row\">\n            <div className=\"container\">\n              <div className=\"title\">{`${origin}-${destination}`}</div>\n              <div className=\"subtitle\">\n                {`${format(new Date(date), 'HH:mm')} - ${format(\n                  addMinutes(new Date(date), duration),\n                  'HH:mm'\n                )}`}\n              </div>\n            </div>\n            <div className=\"container\">\n              <div className=\"title\">В пути</div>\n              <div className=\"subtitle\">{getTimeFromMins(duration)}</div>\n            </div>\n            <div className=\"container\">\n              <div className=\"title\">\n                {plural(\n                  stops.length,\n                  '%d пересадка',\n                  '%d пересадки',\n                  'Без пересадок'\n                )}\n              </div>\n              <div className=\"subtitle\">{stops.join(',')}</div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport './preloader.css';\n\nexport const Preloader: FC = () => <div className=\"loader\" />;\n","import React, { FC, useEffect, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { Header } from './Header/Header';\nimport { Filter } from './Filter/Filter';\nimport { Sorting } from './Sorting/Sorting';\nimport { FlightCard } from './FlightCard/FlightCard';\nimport { Preloader } from './Preloader/Preloader';\n\ntype Flight = {\n  origin: string;\n  destination: string;\n  date: string;\n  stops: string[];\n  duration: number;\n};\n\nexport type Ticket = {\n  price: number;\n  carrier: string;\n  segments: Flight[];\n};\n\ntype SortingMap = {\n  [key: string]: (a: Ticket, b: Ticket) => number;\n};\n\nconst comparePrice = (a: Ticket, b: Ticket) => a.price - b.price;\n\nconst compareFlightDuration = (a: Ticket, b: Ticket) => {\n  const firstFlightDuration = a.segments[0].duration + a.segments[1].duration;\n  const secondFlightDuration = b.segments[0].duration + b.segments[1].duration;\n\n  return firstFlightDuration - secondFlightDuration;\n};\n\nconst sortingMap: SortingMap = {\n  cheap: comparePrice,\n  fast: compareFlightDuration,\n};\n\nconst API_URL = 'https://front-test.beta.aviasales.ru';\n\nconst getSearchId = async () => {\n  const url = `${API_URL}/search`;\n  const response = await axios.get(url);\n  return response.data.searchId;\n};\n\nconst getTicketPack = async (searchId: string) => {\n  const url = `${API_URL}/tickets?searchId=${searchId}`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nconst App: FC = () => {\n  const [allTickets, setAllTickets] = useState([] as Ticket[]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [sort, setSort] = useState('cheap');\n  const [filterParams, setFilterParams] = useState([0, 1, 2, 3]);\n\n  const filter = (ticket: Ticket) => {\n    const flightForceStops = ticket.segments[0].stops.length;\n    const flightBackStops = ticket.segments[1].stops.length;\n    return (\n      filterParams.includes(flightForceStops) &&\n      filterParams.includes(flightBackStops)\n    );\n  };\n\n  useEffect(() => {\n    type Iter = (searchId: string, acc: Ticket[]) => Promise<Ticket[] | Iter>;\n\n    const loadTickets = async () => {\n      const iter: Iter = async (searchId: string, acc: Ticket[]) => {\n        try {\n          const ticketPack = await getTicketPack(searchId);\n          const newAcc = [...acc, ...ticketPack.tickets];\n          if (ticketPack.stop) {\n            return newAcc;\n          }\n          return iter(searchId, newAcc);\n        } catch (e) {\n          return iter(searchId, acc);\n        }\n      };\n\n      const searchId = await getSearchId();\n      const tickets = await iter(searchId, []);\n\n      setAllTickets(tickets as Ticket[]);\n      setIsLoading(false);\n    };\n\n    loadTickets();\n  }, []);\n\n  return (\n    <>\n      <Header />\n      {isLoading ? (\n        <Preloader />\n      ) : (\n        <main className=\"flex\">\n          <Filter handleFilter={setFilterParams} />\n          <div className=\"content\">\n            <Sorting handleSort={setSort} />\n            <div className=\"ticketList\">\n              {allTickets\n                .filter(filter)\n                .sort(sortingMap[sort])\n                .slice(0, 5)\n                .map((Ticket: Ticket, i) => (\n                  <FlightCard key={i} data={Ticket} />\n                ))}\n            </div>\n          </div>\n        </main>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}