{"version":3,"sources":["components/Header/logo.svg","components/Header/Header.tsx","components/Checkbox/Checkbox.tsx","components/Filter/Filter.tsx","components/Sorting/Sorting.tsx","components/Ticket/Ticket.tsx","components/Preloader/Preloader.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","src","logo","alt","Checkbox","stopType","isChecked","label","onChange","type","checked","data-type","Filter","handleFilter","useState","filterParam","stops","setStops","handleStopsChange","useCallback","e","target","dataset","Object","entries","reduce","acc","key","value","newStops","isAllFieldsChecked","filter","every","keys","map","i","Sorting","handleSort","sortType","setSortType","leftTabClass","cn","active","rightTabClass","handleClick","sortName","sortname","onClick","data-sortname","Ticket","data","price","carrier","segments","url","origin","destination","date","duration","format","Date","addMinutes","mins","hours","Math","trunc","minutes","getTimeFromMins","plural","length","join","Preloader","sortingMap","cheap","a","b","fast","API_URL","getSearchId","axios","get","response","searchId","getTicketPack","App","allTickets","setAllTickets","isLoading","setIsLoading","sort","setSort","filterParams","setFilterParams","useEffect","iter","ticketPack","newAcc","tickets","stop","loadTickets","ticket","flightForceStops","flightBackStops","includes","slice","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2bd72b03.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.96990a1b.svg\";","import React, { FunctionComponent } from 'react';\nimport logo from './logo.svg';\nimport './header.css';\n\nexport const Header: FunctionComponent = () => (\n  <header className=\"header\">\n    <img src={logo} alt=\"logo\" />\n  </header>\n);\n\n","import React,{ FC } from \"react\";\nimport './checkbox.css';\n\ntype CheckboxProps = {\n  stopType: string\n  label: string\n  isChecked: boolean\n  onChange: (e: React.SyntheticEvent<HTMLInputElement>) => void\n}\n\nexport const Checkbox: FC<CheckboxProps> = ({ stopType, isChecked, label, onChange }) => (\n  <div className=\"checkbox\">\n    <label className=\"checkbox-label\">\n    <input\n      type=\"checkbox\"\n      className=\"checkbox-input\"\n      checked={isChecked}\n      onChange={onChange}\n      data-type={stopType}\n    />\n    <span className=\"checkbox-display\"></span>\n    {label}\n    </label>\n  </div>\n)","import React, { FC, useState, useCallback }from 'react';\nimport './filter.css';\nimport { Checkbox } from '../Checkbox/Checkbox';\n\ntype stops = {\n  [key: string] : { label: string,  checked: boolean, filterParam: number }\n};\n\ntype filterProps = {\n  handleFilter: (filterParams: number[]) => void\n}\n\nexport const Filter: FC<filterProps> = ({ handleFilter }) => {\n\n  const initStops: stops = {\n    'all': { label: 'Все', checked: true, filterParam: -1 },\n    'without stops': { label: 'Без пересадок', checked: true, filterParam: 0 },\n    'one stop': { label: '1 пересадка', checked: true, filterParam: 1 },\n    'two stops': { label: '2 пересадки', checked: true, filterParam: 2 },\n    'three stops': { label: '3 пересадки', checked: true, filterParam: 3 }\n  };\n\n  const [stops, setStops] = useState(initStops);\n\n  const handleStopsChange = useCallback((e: React.SyntheticEvent<HTMLInputElement>) => {\n    const stopType = (e.target as HTMLInputElement).dataset.type;\n    const isChecked = (e.target as HTMLInputElement).checked;\n    \n    if (stopType === 'all') {\n      setStops(Object.entries(stops).reduce((acc, [key, value]) => ({ ...acc, [key]: { ...value, checked: isChecked } }), {}));\n      handleFilter(isChecked ? [0, 1, 2, 3] : []);\n      return;\n    }\n\n    const newStops = { ...stops, [stopType as string]: { ...stops[stopType as string], checked: isChecked }};\n    const isAllFieldsChecked: boolean = Object.entries(newStops).filter(([key, ]) => key !== 'all').every(([, { checked }]) => checked);\n    newStops['all'] = { ...newStops['all'], checked: isAllFieldsChecked };\n    setStops(newStops);\n    handleFilter(Object.keys(newStops)\n      .filter((key) => newStops[key].checked)\n      .map((key) => newStops[key].filterParam)\n    );\n  }, [handleFilter, stops]);\n\n  return (\n    <aside className=\"filter col-4\">\n      <div className=\"filter-header\">Количество пересадок</div>\n      <div className=\"checkbox-list\">\n        {\n          Object.entries(stops).map(([key, { label, checked }], i) => (\n            <Checkbox\n              key={i}\n              label={label}\n              stopType={key}\n              isChecked={checked}\n              onChange={handleStopsChange}\n            />\n          ))\n        }\n      </div>\n    </aside>\n  )\n};\n","import cn from 'classnames'\nimport React, { FC, useState, useCallback }from 'react';\nimport './sorting.css';\n\ntype sortingProps = {\n  handleSort: (sortType: string) => void\n}\n\nexport const Sorting: FC<sortingProps> = ({ handleSort }) => {\n\n  const [sortType, setSortType] = useState('cheap');\n\n  const leftTabClass = cn('tab', 'left-tab', {\n    active: sortType === 'cheap'\n  })\n\n  const rightTabClass = cn('tab', 'right-tab', {\n    active: sortType === 'fast'\n  })\n\n  const handleClick = useCallback((e: React.SyntheticEvent<HTMLDivElement>) => {\n    const sortName = (e.target as HTMLDivElement).dataset.sortname;\n    setSortType(sortName as string);\n    handleSort(sortName as string);\n  }, [handleSort]);\n\n  return (\n    <div className=\"tabs\">\n      <div\n        className={leftTabClass}\n        onClick={handleClick}\n        data-sortname=\"cheap\"\n      >Самый дешевый</div>\n      <div\n        className={rightTabClass}\n        onClick={handleClick}\n        data-sortname=\"fast\"\n      >Самый быстрый</div>\n    </div>\n  )\n}","import React, { FC } from 'react';\nimport { ticket } from '../App';\nimport plural from 'plural-ru';\nimport { format, addMinutes } from 'date-fns';\nimport './ticket.css';\n\ntype FlightCardProps ={\n  data: ticket\n};\n\nconst getTimeFromMins = (mins: number) => {\n  const hours = Math.trunc(mins/60);\n  const minutes = mins % 60;\n  return `${hours}ч ${minutes}м`;\n};\n\nexport const Ticket: FC<FlightCardProps> = ({ data }) => {\n\n  const { price, carrier, segments } = data;\n  const url = `//pics.avs.io/99/36/${carrier}.png`;\n\n  return (\n    <div className=\"ticket\">\n      <header className=\"ticket-header\">\n        <div className=\"ticket-price\">{`${price} Р`}</div>\n        <div className=\"ticket-logo\"><img src={url} alt=\"logo\"/></div>\n      </header>\n      <div className=\"flight-data\">\n        {\n          segments.map(({ origin, destination, date, stops, duration }, i) => (\n            <div key={i} className=\"row\">\n              <div className=\"container\">\n                <div className=\"title\">{`${origin}-${destination}`}</div>\n                <div className=\"subtitle\">{`${format(new Date(date), 'HH:mm')} - ${format(addMinutes(new Date(date), duration), 'HH:mm')}`}</div>\n              </div>\n              <div className=\"container\">\n                <div className=\"title\">В пути</div>\n                <div className=\"subtitle\">{getTimeFromMins(duration)}</div>\n              </div>\n              <div className=\"container\">\n                <div className=\"title\">{plural(stops.length, '%d пересадка', '%d пересадки', 'Без пересадок')}</div>\n                <div className=\"subtitle\">{stops.join(',')}</div>\n              </div>\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  )\n}","import React, { FC }from 'react';\nimport './preloader.css';\n\nexport const Preloader: FC = () => <div className=\"loader\"></div>;","import React, { FC, useEffect, useState } from 'react';\nimport './App.css';\nimport { Header } from './Header/Header';\nimport { Filter } from './Filter/Filter';\nimport { Sorting } from './Sorting/Sorting';\nimport { Ticket } from './Ticket/Ticket';\nimport { Preloader } from './Preloader/Preloader';\nimport axios from 'axios';\n\ntype flight = {\n  origin: string\n  destination: string\n  date: string\n  stops: string[]\n  duration: number\n}\n\nexport type ticket = {\n  price: number\n  carrier: string\n  segments: flight[]\n}\n\ntype sortingMap = {\n  [key: string]: (a: ticket, b: ticket) => number\n}\n\nconst comparePrice = (a: ticket, b: ticket) => a.price - b.price;\n\nconst compareFlightDuration = (a: ticket, b: ticket) => {\n  const firstFlightDuration = a.segments[0].duration + a.segments[1].duration;\n  const secondFlightDuration = b.segments[0].duration + b.segments[1].duration;\n\n  return firstFlightDuration - secondFlightDuration;\n}\n\nconst sortingMap: sortingMap = {\n  cheap: comparePrice,\n  fast: compareFlightDuration\n}\n\nconst API_URL = 'https://front-test.beta.aviasales.ru';\n\nconst getSearchId = async () => {\n  const url = `${API_URL}/search`;\n  const response = await axios.get(url);\n  return response.data.searchId;\n}\n\nconst getTicketPack = async (searchId: string) => {\n  const url = `${API_URL}/tickets?searchId=${searchId}`;\n  const response = await axios.get(url);\n  return response.data;\n}\n\nconst App: FC = () => {\n\n  const [allTickets, setAllTickets] = useState([] as ticket[]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [sort, setSort] = useState('cheap');\n  const [filterParams, setFilterParams] = useState([0, 1, 2, 3]);\n\n  const filter = (ticket: ticket) => {\n    const flightForceStops = ticket.segments[0].stops.length;\n    const flightBackStops = ticket.segments[1].stops.length;\n    return filterParams.includes(flightForceStops) && filterParams.includes(flightBackStops);\n  }\n\n  type iter = (searchId: string, acc: ticket[]) => Promise<ticket[] | iter>\n\n  useEffect(() => {\n    const loadTickets = async () => {\n      const iter: iter = async (searchId: string, acc: ticket[]) => {\n        try {\n          const ticketPack = await getTicketPack(searchId);\n          const newAcc = [...acc, ...ticketPack.tickets];\n          if (ticketPack.stop) {\n            return newAcc;\n          }\n          return iter(searchId, newAcc);\n        } catch (e) {\n          return iter(searchId, acc);\n        }\n      }\n\n      const searchId = await getSearchId();\n      const tickets = await iter(searchId, []);\n\n      setAllTickets(tickets as ticket[]);\n      setIsLoading(false);\n    }\n    loadTickets();\n  }, []);\n\n  return (\n    <>\n      <Header />\n      {\n        isLoading ?\n          <Preloader /> :\n          <main className=\"main-grid\">\n            <Filter handleFilter={setFilterParams} />\n            <div className=\"col-8\">\n              <Sorting handleSort={setSort} />\n              <div className=\"ticketList\">\n                {\n                  allTickets\n                    .filter(filter)\n                    .sort(sortingMap[sort])\n                    .slice(0, 5)\n                    .map((ticket: ticket, i) => <Ticket key={i} data={ticket} />)\n                }\n              </div> \n            </div>\n          </main>\n      }\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}